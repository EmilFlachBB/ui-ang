{
  "module": "LoadButtonModule",
  "selector": "bb-load-button-ui",
  "description": "Component that displays a button with integrated loading indicator. Refer to [Button Component](https://designsystem.backbase.com/web-components/button/web) for button colors and sizes. ### Use Case There are two use-cases for this component:    - Finite loading - button is disabled but remains displayed after a certain limit    - Infinite loading - button is always functional #### Finite Loading This is used primarily when paginating a list of items and the number of items is known. The component is enabled and allows loading as long as the current number of displayed results (determined by `from` and `size`) is under the `totalCount`. ```html     ``` #### Infinite Loading This is used primarily when you are loading a content only once or endlessly. This is the default behaviour. This behaviour is available as long as the `totalCount` is 1. ```html     ```",
  "storybookUrl": "https://designsystem.backbase.com/storybook/?path=/docs/design-system-load-button--docs",
  "inputs": {
    "aria-label": {
      "type": "string",
      "description": "Accessible label when button does not contain a discernible text."
    },
    "circle": {
      "type": "boolean",
      "description": "Whether it should render the button as a circle. Defaults to false i.e. oblong shape.",
      "default": "false"
    },
    "from": {
      "type": "number",
      "description": "The page to list from.",
      "default": "0"
    },
    "isLoading": {
      "type": "boolean",
      "description": "Indicates if loading indicator should be shown instead of button content. Defaults to false.",
      "default": "false"
    },
    "size": {
      "type": "number",
      "description": "The number of results per page.",
      "default": "0"
    },
    "totalCount": {
      "type": "number",
      "description": "The total item count. Defaults to 1 to allow infinite loading.",
      "default": "1"
    },
    "autofocus": {
      "type": "boolean",
      "description": "This Boolean attribute lets you specify that the button should have input focus when the page loads, unless the user overrides it, for example by typing in a different control.  Only one form-associated element in a document can have this attribute specified.",
      "default": "false"
    },
    "block": {
      "type": "boolean",
      "description": "The flag to indicate whether the button should fill the container that it is in. Defaults to 'false'.",
      "default": "false"
    },
    "buttonSize": {
      "type": "\"sm\" | \"md\"",
      "description": "Size of the button.",
      "default": "'md'"
    },
    "color": {
      "type": "ButtonColor | string",
      "options": "'primary' | 'info' | 'success' | 'warning' | 'danger' | 'secondary' | 'light' | 'dark' | 'link' | 'tertiary' | 'link-text' | 'link-text-light' | 'unstyled' | 'link-dark' | 'neutral'",
      "description": "The color for the button.  Defaults to 'primary'.",
      "default": "'primary'"
    },
    "disabled": {
      "type": "boolean",
      "description": "This Boolean attribute indicates that the user cannot interact with the button.  Defaults to false.",
      "default": "false"
    },
    "id": {
      "type": "string",
      "description": "The id for the button. Defaults to unique string"
    },
    "type": {
      "type": "ButtonType",
      "options": "'button' | 'submit' | 'reset'",
      "description": "The HTML5 button type.  Defaults to 'button'.",
      "default": "'button'"
    }
  },
  "outputs": {
    "paramChange": {
      "type": "EventEmitter<LoadMoreParams>",
      "description": "This emits new load more params to parent component"
    }
  },
  "methods": {
    "hasMore": {
      "returns": {
        "type": "boolean"
      }
    },
    "isLoadMore": {
      "returns": {
        "type": "boolean"
      }
    },
    "onClick": {
      "params": [
        {
          "name": "$event",
          "type": "MouseEvent"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    "onHostElementClick": {
      "params": [
        {
          "name": "$event",
          "type": "MouseEvent"
        }
      ],
      "returns": {
        "type": "boolean"
      }
    },
    "onLoadMore": {
      "returns": {
        "type": "void"
      }
    },
    "moveAriaAttributes": {
      "params": [
        {
          "name": "hostEl",
          "type": "HTMLElement"
        },
        {
          "name": "childEl",
          "type": "HTMLElement"
        }
      ],
      "returns": {
        "type": "void"
      }
    }
  }
}
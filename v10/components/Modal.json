{
  "module": "ModalModule",
  "selector": "bb-modal-ui",
  "storybookUrl": "https://designsystem.backbase.com/storybook/?path=/docs/design-system-modal--docs",
  "inputs": {
    "aria-describedby": {
      "type": "string | undefined",
      "description": "Set aria-describedby with an element id that contains a detailed description about the modal."
    },
    "aria-labelledby": {
      "type": "string | undefined",
      "description": "Set aria-labelledby with an element id that contains a brief label about the modal. By default is takes the modal heading."
    },
    "isOpen": {
      "type": "",
      "description": "The flag to show the dialog window. Defaults to 'false'.",
      "default": "false"
    },
    "modalOptions": {
      "type": "NgbModalOptions",
      "description": "Dialog options inherited from https://ng-bootstrap.github.io/#/components/modal/api#NgbModalOptions. Defaults to an empty object.",
      "default": "{}"
    },
    "role": {
      "type": "",
      "description": "Customize the ARIA role this component. This can be used to improve accessibility for components, for example by configuring [role]=&quot;'alertdialog'&quot; if it requires immediate attention of the user. Defaults to 'dialog'.",
      "default": "'dialog'"
    }
  },
  "outputs": {
    "cancel": {
      "type": "EventEmitter",
      "description": "The event that's fired after cancel button is pressed. Can be used with (click)=&quot;dialogRef.onCancel()&quot; where dialogRef is a templateRef on &lt;bb-dialog-ui #dialogRef /&gt;"
    },
    "confirm": {
      "type": "EventEmitter",
      "description": "The event that's fired after confirm button is pressed. Can be used with (click)=&quot;dialogRef.onConfirm()&quot; where dialogRef is a templateRef on &lt;bb-dialog-ui #dialogRef /&gt;"
    },
    "isOpenChange": {
      "type": "EventEmitter",
      "description": "Used for two way binding with the isOpen Input. If used, backdrop and esc dismiss cases will be handled automatically."
    }
  },
  "methods": {
    "closeModal": {
      "params": [
        {
          "name": "reason",
          "type": "string"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    "dismissModal": {
      "params": [
        {
          "name": "reason",
          "type": "string"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    "getDismissReason": {
      "params": [
        {
          "name": "reason",
          "type": "ModalDismissReasons | string"
        }
      ],
      "returns": {
        "type": "ModalDismissReasons | string"
      }
    },
    "onElementViewInit": {
      "params": [
        {
          "name": "el",
          "type": "ElementRef<ModalHeaderComponent>"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    "setConfirm": {
      "params": [
        {
          "name": "flag",
          "type": "boolean"
        }
      ],
      "returns": {
        "type": "void"
      }
    },
    "trapKeyEvent": {
      "params": [
        {
          "name": "event",
          "type": "KeyboardEvent"
        }
      ],
      "returns": {
        "type": "void"
      }
    }
  }
}